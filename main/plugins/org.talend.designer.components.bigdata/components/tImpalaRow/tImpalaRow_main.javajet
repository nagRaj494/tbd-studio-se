<%@ jet 
imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.core.model.metadata.MappingTypeRetriever
		org.talend.core.model.metadata.MetadataTalendType
		org.talend.designer.runprocess.ProcessorException
		org.talend.designer.runprocess.ProcessorUtilities
		java.util.List	
		java.util.Map
		java.util.Set
		java.util.HashSet
		" 
%>
<%
	CodeGeneratorArgument loadCodeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)loadCodeGenArgument.getArgument();
	final String cid = node.getUniqueName();

	boolean useExistingConn = "true".equals(ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__"));
	boolean dieOnError = "true".equals(ElementParameterParser.getValue(node,"__DIE_ON_ERROR__"));
	String propagateRecordset = ElementParameterParser.getValue(node,"__PROPAGATE_RECORD_SET__");
	String recordsetColumn = ElementParameterParser.getValue(node,"__RECORD_SET_COLUMN__");
	boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
	boolean usePrepareStatement = "true".equals(ElementParameterParser.getValue(node,"__USE_PREPAREDSTATEMENT__"));
	List<Map<String, String>> prepareStatementParameters = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__SET_PREPAREDSTATEMENT_PARAMETERS__");
	 
	String dbquery= ElementParameterParser.getValue(node, "__QUERY__");
	dbquery = org.talend.core.model.utils.NodeUtil.replaceCRLFInMEMO_SQL(dbquery);
	
	String incomingConnName = null;
	
	Set<String> inputCols = new HashSet<String>();
	
	List<IMetadataColumn> columnList = null;
	
	String rejectConnName = null;
	List<? extends IConnection> rejectConns = node.getOutgoingConnections("REJECT");
	if(rejectConns != null && rejectConns.size() > 0) {
	    IConnection rejectConn = rejectConns.get(0);
	    rejectConnName = rejectConn.getName();
	}
	List<IMetadataColumn> rejectColumnList = null;
	IMetadataTable metadataTable = node.getMetadataFromConnector("REJECT");
	if(metadataTable != null) {
	    rejectColumnList = metadataTable.getListColumns();      
	}
	
	List<? extends IConnection> outgoingConns = node.getOutgoingSortedConnections();
	
	boolean hasOutgoingDataConnection = false;
	for(IConnection conn : outgoingConns) {
	    if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
			if(!hasOutgoingDataConnection){
				hasOutgoingDataConnection = true;
			}
%>    
			<%=conn.getName() %> = null;            
<%      
	    }
	}
%>
	query_<%=cid %> = <%=dbquery%>;
	whetherReject_<%=cid%> = false;

	<%
	List<IMetadataTable> metadatas = node.getMetadataList();
	if ((metadatas!=null)&&(metadatas.size()>0)) {
		IMetadataTable metadata = metadatas.get(0);
		if (metadata!=null) {
			List< ? extends IConnection> conns = node.getIncomingConnections();
			columnList = metadata.getListColumns();
			if(conns != null && conns.size()>0){
				IConnection conn = conns.get(0);
				if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
					incomingConnName = conn.getName();
					IMetadataTable inputMetadataTable = conn.getMetadataTable();
					for (IMetadataColumn inputCol : inputMetadataTable.getListColumns()) {
						inputCols.add(inputCol.getLabel());
					}
				}
			}//end of connection size.
		}//end of metadatas
	}
	if(!hasOutgoingDataConnection || columnList == null || columnList.size() < 1){
		propagateRecordset = "false";
	}
%>
	globalMap.put("<%=cid %>_QUERY",query_<%=cid %>);
<%
	if(("true").equals(propagateRecordset)) {
%>
		java.sql.ResultSet rs_<%=cid %> = null;
<%
	}
%>
	try {
<%		
		if (usePrepareStatement) {
			for (Map<String, String> param : prepareStatementParameters) {
				if ("Date".equals(param.get("PARAMETER_TYPE"))) {
%>
					pstmt_<%=cid %>.setTimestamp(<%=param.get("PARAMETER_INDEX")%>,new java.sql.Timestamp(<%=param.get("PARAMETER_VALUE")%>.getTime()));
<%
				} else {
%>
					pstmt_<%=cid %>.set<%=param.get("PARAMETER_TYPE")%>(<%=param.get("PARAMETER_INDEX")%>,<%=param.get("PARAMETER_VALUE")%>);
<%
				}
			}
			
			if(("true").equals(propagateRecordset)) {
%>
				rs_<%=cid %> = pstmt_<%=cid %>.executeQuery();
<%
			} else {
%>
	    		pstmt_<%=cid %>.execute();
<%
			}
		} else {
			if(("true").equals(propagateRecordset)) {
%>
				rs_<%=cid %> = stmt_<%=cid %>.executeQuery(query_<%=cid %>);
<%
			} else {
%>
	    		stmt_<%=cid %>.execute(query_<%=cid %>);
<%
			}
		}
%>
	} catch (java.lang.Exception e) {
		whetherReject_<%=cid%> = true;
<%
		if (dieOnError) {
%>
<%
			if(isLog4jEnabled){
%>
				log.fatal("<%=cid%> - " + e.getMessage());
<%
			}
%>
			throw e;
<%
		} else {
			if(isLog4jEnabled) {
%>
				log.error("<%=cid%> - " + e.getMessage());
<%
			}
			if(rejectConnName != null && rejectColumnList != null && rejectColumnList.size() > 0) {
%>
				<%=rejectConnName %> = new <%=rejectConnName %>Struct();
<%
            if(incomingConnName!=null) {
					for(IMetadataColumn column : columnList) {
                	if (inputCols.contains(column.getLabel())) {
%>
							<%=rejectConnName%>.<%=column.getLabel()%> = <%=incomingConnName%>.<%=column.getLabel()%>;
<%
						}
					}
				}
%>
				<%=rejectConnName%>.errorCode = ((java.sql.SQLException)e).getSQLState();
				<%=rejectConnName%>.errorMessage = e.getMessage() + " - Line: " + tos_count_<%=node.getUniqueName() %>;
<%
			} else {
%>
				System.err.println("Exception in the component <%=cid%>:" + e.getMessage());
<%
			}
		} 
%>
    }
<%
		
	if(outgoingConns != null && outgoingConns.size() > 0) {
%>
		if(!whetherReject_<%=cid%>) {
<%
			for(IConnection outgoingConn : outgoingConns) {
				if(rejectConnName == null || (rejectConnName != null && !outgoingConn.getName().equals(rejectConnName))) {
					if(outgoingConn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
%>
						<%=outgoingConn.getName()%> = new <%=outgoingConn.getName()%>Struct();
<%
						for(IMetadataColumn column : columnList) {
							if(("true").equals(propagateRecordset) && column.getLabel().equals(recordsetColumn)){
%>
								<%=outgoingConn.getName()%>.<%=column.getLabel()%> = rs_<%=cid %>;
<%
							} else {
								if(incomingConnName!=null){
									if (inputCols.contains(column.getLabel())) {
%>
										<%=outgoingConn.getName()%>.<%=column.getLabel()%> = <%=incomingConnName%>.<%=column.getLabel()%>;
<%
									}
								}
							}
						}
					}
				}
			}
%>
		}
<%
	}
%>