<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.designer.codegen.config.CodeGeneratorArgument
	" 
%>
<%@ include file="../tNeo4jOutput/tNeo4jOutput_Neo4JTransactionHelper.javajet"%>
<%@ include file="tNeo4jOutputRelationship_Neo4JOutputRelationshipUtil.javajet"%>
<%
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();	

    boolean batchImport = "true".equalsIgnoreCase(ElementParameterParser.getValue(node, "__BATCH_IMPORT__"));

    boolean useExistingConnection = "true".equalsIgnoreCase(ElementParameterParser.getValue(node, "__USE_EXISTING_CONNECTION__"));
	boolean shutdownDb = "true".equalsIgnoreCase(ElementParameterParser.getValue(node, "__SHUTDOWN_DB__"));
    String connection = ElementParameterParser.getValue(node, "__CONNECTION__");
    String dbconn = "dbService_" + connection;

    Neo4JOutputRelationshipUtil neo4JOutputRelationshipUtil = new Neo4JOutputRelationshipUtil(node);
    Neo4JTransactionHelper neo4JTransactionHelper = new Neo4JTransactionHelper(node);

    neo4JTransactionHelper.closeTransaction();

	if (!batchImport && (!useExistingConnection || (useExistingConnection && shutdownDb))) {
		%>
			databaseService_<%=cid%>.shutdown();
			resourceMap.put("finish_<%=cid%>", true); 
		<%
	}

	if (batchImport) {
        neo4JOutputRelationshipUtil.shutdownIndexProvider();
        neo4JOutputRelationshipUtil.shutdownInserter();
        %>

		resourceMap.put("finish_<%=cid%>", true); 
		<%
		if (useExistingConnection && !shutdownDb) {
		    neo4JOutputRelationshipUtil.restartEmbeddedDatabase();
		}
	}
%>
globalMap.put("<%=cid%>_NB_LINE", nb_line_<%=cid%>);