<%@ jet
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.ElementParameterParser
		org.talend.designer.codegen.config.CodeGeneratorArgument
	    	java.util.List
	    	java.util.Map
		"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();

	String previous_node="";
	String start_node="";
	
	boolean inMain = true;
	boolean isExecutedThroughWebHCat = false;

	String previousOutputConnectionName = "";
	
	if(node.getIncomingConnections()!=null && node.getIncomingConnections().size()>0) {
		IConnection connection = node.getIncomingConnections().get(0);
		previous_node = connection.getSource().getUniqueName();
		INode loadNode = node.getDesignSubjobStartNode();
		start_node = loadNode.getUniqueName();

		boolean isLocal = "true".equals(ElementParameterParser.getValue(loadNode, "__LOCAL__"));

        if(!isLocal) {
            String loadDistribution = ElementParameterParser.getValue(loadNode, "__DISTRIBUTION__");
            String loadPigVersion = ElementParameterParser.getValue(loadNode, "__PIG_VERSION__");
            org.talend.hadoop.distribution.component.PigComponent pigDistrib = null;
            try {
                pigDistrib = (org.talend.hadoop.distribution.component.PigComponent) org.talend.hadoop.distribution.DistributionFactory.buildDistribution(loadDistribution, loadPigVersion);
            } catch (java.lang.Exception e) {
                e.printStackTrace();
                return "";
            }

            boolean isCustom = pigDistrib instanceof org.talend.hadoop.distribution.custom.CustomDistribution;
            isExecutedThroughWebHCat = !isCustom && pigDistrib != null && pigDistrib.isExecutedThroughWebHCat();
        }

		inMain = loadNode.isSubtreeStart();
		previousOutputConnectionName = connection.getName();
	}
	
	String outputConnectionName = "";
	List<IConnection> outputConnections = (List<IConnection>)node.getOutgoingConnections();
	if(outputConnections!=null && outputConnections.size()>0) {
		outputConnectionName = outputConnections.get(0).getName();
	}
	
	List<Map<String, String>> configs = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__FILTER_CONFIG__");
	boolean useAdvancedFilter = "true".equals(ElementParameterParser.getValue(node, "__USE_ADVANCED_FILTER__"));
	String advancedFilter = ElementParameterParser.getValue(node, "__ADVANCED_FILTER__");
%>
	<%@ include file="@{org.talend.designer.components.bigdata}/components/templates/Pig/PigHeader.javajet"%>	
	
	routines.system.PigHelper helper_<%=cid%> = new routines.system.PigHelper();
	
	StringBuilder sb_<%=cid%> = new StringBuilder();
	sb_<%=cid%>.append("<%=cid%>_<%=outputConnectionName%>_RESULT = FILTER <%=previous_node%>_<%=previousOutputConnectionName%>_RESULT BY ");
	
<%
	if(!useAdvancedFilter) {
		boolean isFirst = true;
		String operator = "";
		for(Map<String, String> configMap : configs) {
			if(!isFirst) {
%>
				sb_<%=cid%>.append(" <%=configMap.get("LOGICAL")%> ");
<%
			}
			isFirst=false;

			if("EQUAL".equals(configMap.get("OPERATOR"))) {
				operator = "==";
			} else if("NEQUAL".equals(configMap.get("OPERATOR"))) {
				operator = "!=";
			} else if("GREATER".equals(configMap.get("OPERATOR"))) {
				operator = ">";
			} else if("GREATER_EQUAL".equals(configMap.get("OPERATOR"))) {
				operator = ">=";
			} else if("LESS".equals(configMap.get("OPERATOR"))) {
				operator = "<";
			} else if("LESS_EQUAL".equals(configMap.get("OPERATOR"))) {
				operator = "<=";
			} else if("MATCH".equals(configMap.get("OPERATOR"))) {
				operator = "matches";
			}
%>
			sb_<%=cid%>.append("(<%="true".equals(configMap.get("NOT"))?"NOT ":""%>(<%=configMap.get("COLUMN_NAME")%> <%=operator%> "+<%=configMap.get("VALUE")%>+"))");
<%
		}
	}else {
%>
		sb_<%=cid%>.append(<%=advancedFilter%>);
<%
	}
%>
	sb_<%=cid%>.append(";");
	
	helper_<%=cid%>.add("query",sb_<%=cid%>.toString());
	
	<%@ include file="@{org.talend.designer.components.bigdata}/components/templates/Pig/RegisterPigLatin.javajet"%>
