<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.designer.codegen.config.CodeGeneratorArgument
	" 
%>
<% 
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();
    String dbPath = ElementParameterParser.getValue(node, "__DATABASE_PATH__");

	boolean remoteServer = "true".equalsIgnoreCase(ElementParameterParser.getValue(node, "__REMOTE_SERVER__"));
	boolean readOnlyMode = "true".equalsIgnoreCase(ElementParameterParser.getValue(node, "__READ_ONLY_MODE__"));
	
	
	if (remoteServer) {
		String serverUrl = ElementParameterParser.getValue(node, "__SERVER_URL__");
		String dbVersion = ElementParameterParser.getValue(node, "__DB_VERSION__");
        boolean setUsername = ElementParameterParser.getBooleanValue(node, "__SET_USERNAME__");
        String username = ElementParameterParser.getValue(node, "__USERNAME__");
        String passwordFieldName = "__PASSWORD__";
        if ((setUsername) || ((!"NEO4J_1_X_X".equals(dbVersion)) && (!"NEO4J_2_1_X".equals(dbVersion)))) {
		    %>
	        <%@ include file="@{org.talend.designer.components.localprovider}/components/templates/password.javajet"%>
		    org.neo4j.graphdb.GraphDatabaseService databaseService_<%=cid%> = new org.neo4j.rest.graphdb.RestGraphDatabase(<%=serverUrl%>, <%=username%>, decryptedPassword_<%=cid%>);
		    <%
		} else {
		    %>
		    org.neo4j.graphdb.GraphDatabaseService databaseService_<%=cid%> = new org.neo4j.rest.graphdb.RestGraphDatabase(<%=serverUrl%>);
		    <%
		}
	} else {
		if (readOnlyMode) {
			%>
            java.util.Map config = new java.util.HashMap();
//            config.put( "read_only", "true" );
			org.neo4j.graphdb.GraphDatabaseService databaseService_<%=cid%> = new org.neo4j.graphdb.factory.GraphDatabaseFactory()
			        .newEmbeddedDatabaseBuilder(<%=dbPath%>)
			        .setConfig(org.neo4j.graphdb.factory.GraphDatabaseSettings.read_only, "true").newGraphDatabase();
//			        .setConfig(config).newGraphDatabase();
			<%
		} else {
			%>
			org.neo4j.graphdb.GraphDatabaseService databaseService_<%=cid%> = new org.neo4j.graphdb.factory.GraphDatabaseFactory().newEmbeddedDatabase(<%=dbPath%>);
			<%
		}
	}
	
	%>
	globalMap.put("dbService_<%=cid%>_path", <%=dbPath%>);
    globalMap.put("dbService_<%=cid%>", databaseService_<%=cid%>);