<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.metadata.IMetadataTable
		org.talend.core.model.metadata.IMetadataColumn
    	org.talend.core.model.process.ElementParameterParser		
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory 
		org.talend.designer.codegen.config.CodeGeneratorArgument
		java.util.List
		java.util.Map
	"
%>
<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();

String sstablePath = ElementParameterParser.getValue(node,"__SSTABLE_STORE_PATH__");
String keySpace = ElementParameterParser.getValue(node,"__KEY_SPACE__");
String columnFamily = ElementParameterParser.getValue(node,"__COLUMN_FAMILY__");
String host = ElementParameterParser.getValue(node,"__HOST__");
String port = ElementParameterParser.getValue(node,"__PORT__");
String version = ElementParameterParser.getValue(node,"__DB_VERSION__");
boolean requireAuth = "true".equals(ElementParameterParser.getValue(node,"__REQUIRED_AUTHENTICATION__"));
boolean needAuth = !"CASSANDRA_1_1_2".equals(version) && requireAuth;
String username = ElementParameterParser.getValue(node,"__USERNAME__");
String password = ElementParameterParser.getValue(node,"__PASSWORD__"); 
boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
%> 	
java.io.File file_<%=cid%> = new java.io.File(<%=sstablePath%>, <%=keySpace%>+"/"+<%=columnFamily%>);

java.util.List<String> args_<%=cid%> = new java.util.ArrayList<String>();
args_<%=cid%>.add("-d"+<%=host%>);
args_<%=cid%>.add("-p"+<%=port%>);
<%if(needAuth){%>

<%
String passwordFieldName = "__PASSWORD__";
%>

<%@ include file="@{org.talend.designer.components.localprovider}/components/templates/password.javajet"%>

args_<%=cid%>.add("-u"+<%=username%>);

args_<%=cid%>.add("-pw");
args_<%=cid%>.add(decryptedPassword_<%=cid%>);

<%}%>

<%@ include file="@{org.talend.designer.components.localprovider}/components/tSetKeystore/SSL_Helper.javajet"%>
<%
INode sslNode = ElementParameterParser.getLinkedNodeValue(node, "__HTTPS_SETTING__");
SSL_HELPER sslHelper = new SSL_HELPER(sslNode);
boolean useSSL = ElementParameterParser.getBooleanValue(node, "__USE_HTTPS__") && sslHelper.useHTTPS();
if(useSSL){
%>
	<%if(sslHelper.needKS()){%>
		args_<%=cid%>.add("-ks");
		args_<%=cid%>.add(<%=sslHelper.getKSPath()%>);
		args_<%=cid%>.add("-kspw");
		args_<%=cid%>.add(<%=sslHelper.getKSPwd()%>);
	<%}%>
	args_<%=cid%>.add("-prtcl");
	args_<%=cid%>.add("TLS");
	args_<%=cid%>.add("-ts");
	args_<%=cid%>.add(<%=sslHelper.getTSPath()%>);
	args_<%=cid%>.add("-tspw");
	args_<%=cid%>.add(<%=sslHelper.getTSPwd()%>);
<%
}
boolean useConfFile = ElementParameterParser.getBooleanValue(node, "__USE_CONF_FILE__");
if(useConfFile){
	String confFile = ElementParameterParser.getValue(node, "__CONF_FILE__");
	%>
	System.setProperty("cassandra.config", "file://" + <%=confFile%>);	
	args_<%=cid%>.add("-f");
	args_<%=cid%>.add(<%=confFile%>);
<%
}
%>


args_<%=cid%>.add(file_<%=cid%>.getAbsolutePath());
<%
if (isLog4jEnabled) {
%>
	log.info("<%=cid%> - Loading the data from SSTable "+file_<%=cid%>.getAbsolutePath()+"to the server.");
<%
}
%>
org.apache.cassandra.tools.BulkLoader.main(args_<%=cid%>.toArray(new String[args_<%=cid%>.size()]));
<%
if (isLog4jEnabled) {
%>
	log.info("<%=cid%> - Loaded the data to the server successfully.");
<%
}
%>