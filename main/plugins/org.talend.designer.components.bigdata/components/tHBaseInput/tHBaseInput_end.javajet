<%@ jet
	    imports="
		org.talend.core.model.process.INode
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.ElementParameterParser
		java.util.List
	    "
%>

<%@ include file="@{org.talend.designer.components.localprovider}/components/templates/Log4j/Log4jFileUtil.javajet"%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
String useExistingConn = ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__");
List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas!=null) && (metadatas.size() > 0)) {
	IMetadataTable metadata = metadatas.get(0);
	if (metadata != null) {
		List< ? extends IConnection> conns = node.getOutgoingSortedConnections();
		if (conns != null){
			if (conns.size()>0){
%>
	nb_line_<%=cid%>++;
}
<%
			}
		}
	}
}
%>
	if(table_<%=cid %>!=null){
		table_<%=cid %>.close();
	}
	if(scanner_<%=cid %>!=null){
		scanner_<%=cid %>.close();
	}
<%
//use local connection
if(!"true".equals(useExistingConn)){
	String distribution = ElementParameterParser.getValue(node,"__DISTRIBUTION__");
	String hbaseVersion = ElementParameterParser.getValue(node,"__HBASE_VERSION__");
	boolean isHadoop2 = "HADOOP_2".equals(ElementParameterParser.getValue(node, "__HADOOP_CUSTOM_VERSION__"));
	org.talend.hadoop.distribution.component.HBaseComponent hbaseDistrib = null;
	try {
		hbaseDistrib = (org.talend.hadoop.distribution.component.HBaseComponent) org.talend.hadoop.distribution.DistributionFactory.buildDistribution(distribution, hbaseVersion);
	} catch (java.lang.Exception e) {
		e.printStackTrace();
		return "";
	}
	boolean isCustom = hbaseDistrib instanceof org.talend.hadoop.distribution.custom.CustomDistribution;

%>
	}finally{
		if(conn_<%=cid%>!=null){
			<%@ include file="@{org.talend.designer.components.bigdata}/components/templates/HBase/CloseHBaseConnection.javajet"%>
		}
	}
<%
}
%>
globalMap.put("<%=cid %>_NB_LINE",nb_line_<%=cid%>); 

<%
log4jFileUtil.retrievedDataNumberInfo(node);
%>