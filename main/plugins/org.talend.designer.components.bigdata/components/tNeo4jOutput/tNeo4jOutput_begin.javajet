<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.designer.codegen.config.CodeGeneratorArgument
		java.util.List 
    	java.util.Map 
    	java.util.ArrayList	
    	java.util.HashSet 
    	java.util.Arrays 
    	java.util.Set 
	" 
%>
<%@ include file="tNeo4jOutput_Neo4JOutputUtil.javajet"%>
<% 
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();

    boolean batchImport = "true".equalsIgnoreCase(ElementParameterParser.getValue(node, "__BATCH_IMPORT__"));
    boolean shutdownDb = "true".equalsIgnoreCase(ElementParameterParser.getValue(node, "__SHUTDOWN_DB__"));
    List<Map<String, String>> values = (List<Map<String, String>>) ElementParameterParser.getObjectValue(node, "__VALUES__");

    List<String> autoIndexedColumns = new ArrayList<String>();
    Set<String> indexNames = new HashSet();
    for (Map<String, String> value : values) {
    	boolean autoIndexed = Boolean.valueOf(value.get("AUTO_INDEXED"));
   		if (autoIndexed) {
   			autoIndexedColumns.add(value.get("SCHEMA_COLUMN"));
   		}

   		String strIndexNames = value.get("INDEX_NAMES");
   		if (strIndexNames != null && !strIndexNames.isEmpty()) {
   			indexNames.addAll(Arrays.asList(strIndexNames.split(",")));
   		}
    }

    // Add update/delete index
    String action = (String) ElementParameterParser.getObjectValue(node, "__DATA_ACTION__");
    if (!action.equals("INSERT")) {
    	indexNames.add((String) ElementParameterParser.getObjectValue(node, "__INDEX_NAME__"));
    }

    boolean useExistingConnection = "true".equalsIgnoreCase(ElementParameterParser.getValue(node, "__USE_EXISTING_CONNECTION__"));

    Neo4JOutputUtil neo4JOutputUtil = new Neo4JOutputUtil(node);

    neo4JOutputUtil.createDatabaseService();
%>
int nb_line_<%=cid %> = 0;
long counter_<%=cid%> = 0;
<%
	if (!batchImport && (!useExistingConnection||(useExistingConnection && shutdownDb))) {
%>
	resourceMap.put("databaseService_<%=cid%>", databaseService_<%=cid%>);
<%
	}
    // Index configuration
    if (batchImport) {
        neo4JOutputUtil.writeBatchMode(indexNames, autoIndexedColumns);
    } else {
        neo4JOutputUtil.writeNormalMode(indexNames, autoIndexedColumns);
    }
%>
