<%@ jet
imports="
        org.talend.core.model.process.INode
        org.talend.core.model.process.ElementParameterParser
        org.talend.designer.codegen.config.CodeGeneratorArgument
"
 %>

<%
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();

    String host = ElementParameterParser.getValue(node,"__HOST__");
    String port = ElementParameterParser.getValue(node,"__PORT__");
    String userName = ElementParameterParser.getValue(node,"__USER_NAME__");
    String database = ElementParameterParser.getValue(node,"__DATABASE__");
    String authType = ElementParameterParser.getValue(node,"__AUTHENTICATION_TYPE__");

    boolean reuseConn = "true".equals(ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__"));
    String docType = ElementParameterParser.getValue(node,"__DOC_TYPE__");
    String actionType = ElementParameterParser.getValue(node,"__ACTION_TYPE__");
    if("DELETE".equals(actionType)){
        docType = "GENERIC";
    }

    String passwordFieldName = "__PASSWORD__";
 %>
<%@ include file="@{org.talend.designer.components.localprovider}/components/templates/password.javajet"%>

    int nb_line_<%=cid%> = 0;
    int nb_line_inserted_<%=cid%> = 0;
    int nb_line_deleted_<%=cid%> = 0;
    int nb_line_updated_<%= cid %> = 0;
    int nb_line_rejected_<%=cid%> = 0;

       String docIdSuffix_<%= cid %> = "";
       com.marklogic.client.DatabaseClient client_<%= cid %> = null;
<%
    if(reuseConn){
      String connection = ElementParameterParser.getValue(node,"__CONNECTION__");
      String conn = "conn_" + connection;
     %>
        client_<%= cid %> = (com.marklogic.client.DatabaseClient)globalMap.get("<%=conn%>");
     <%
    }else{
     %>
        com.marklogic.client.DatabaseClientFactory.Authentication authType_<%= cid %> = null;
        <%
            if("DIGEST".equals(authType)){
                %>
                   authType_<%= cid %> = com.marklogic.client.DatabaseClientFactory.Authentication.DIGEST;
                <%
            }else if("BASIC".equals(authType)){
                %>
                   authType_<%= cid %> = com.marklogic.client.DatabaseClientFactory.Authentication.BASIC;
                <%
            }else{
                %>
                   Compile Err: UNKNOWN_AUTHENTICATION_TYPE: <%= authType %>
                <%
            }
        %>
                   client_<%= cid %> = com.marklogic.client.DatabaseClientFactory.newClient(
                          <%= host %>, Integer.valueOf(<%= port %>), <%= database %>, <%= userName %>, decryptedPassword_<%= cid %>, authType_<%= cid %>
                  );
     <%
    }
 %>
                   com.marklogic.client.document.DocumentManager docMgr_<%= cid %> = null;
<%
    if("GENERIC".equals(docType)){
    %>
       docMgr_<%= cid %> = client_<%= cid %>.newDocumentManager();
    <%
    }else if("TEXT".equals(docType)){
    %>
       docMgr_<%= cid %> = client_<%= cid %>.newTextDocumentManager();
       docIdSuffix_<%= cid %> = "txt";
    <%
    }else if("JSON".equals(docType)){
    %>
       docMgr_<%= cid %> = client_<%= cid %>.newJSONDocumentManager();
       docIdSuffix_<%= cid %> = "json";
    <%
    }else if("XML".equals(docType)){
    %>
       docMgr_<%= cid %> = client_<%= cid %>.newXMLDocumentManager();
       docIdSuffix_<%= cid %> = "xml";
    <%
    }else if("BINARY".equals(docType)){
    %>
       docMgr_<%= cid %> = client_<%= cid %>.newBinaryDocumentManager();
       docIdSuffix_<%= cid %> = "bin";
    <%
    }else {
    %>
       Compile Err: UNSUPPORTED_DOC_TYPE <%= docType %>
    <%
    }
%>
