<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.process.ElementParameterParser
		java.util.List
		org.talend.core.model.metadata.IMetadataTable
		org.talend.core.model.process.IConnection    
		org.talend.core.model.process.IConnectionCategory
		org.talend.core.model.utils.NodeUtil
		org.talend.core.model.process.EConnectionType
	"
%>
<%
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();
	String useExistingConn = ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__");
	String strJobCid=cid.replace("_Out","");
	boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
	String dataAction = ElementParameterParser.getValue(node,"__DATA_ACTION__");

	// BulkWrite is only supportted on Mongo 2.6+ drivers
	String dbversion = ElementParameterParser.getValue(node, "__DB_VERSION__");
	boolean setBulkWrite = "true".equalsIgnoreCase(ElementParameterParser.getValue(node, "__SET_BULK_WRITE__"));
	final boolean bulkWrite = setBulkWrite & (!"MONGODB_2_5_X".equalsIgnoreCase(dbversion));
	
	List<IMetadataTable> metadatas = node.getMetadataList();
	if ((metadatas!=null)&&(metadatas.size()>0)) {
    	IMetadataTable metadata = metadatas.get(0);
		if (metadata!=null) {
		%>
				}
			}
			<%
			INode sourceNode = node.getIncomingConnections(EConnectionType.ON_COMPONENT_OK).get(0).getSource();
			String virtualSourceCid = sourceNode.getUniqueName();
			INode startNode = NodeUtil.getSpecificStartNode(sourceNode);
			String startNodeCid = null; 
			if(startNode != null){
				startNodeCid = startNode.getUniqueName();
			} 
			IConnection nextMergeConn = NodeUtil.getNextMergeConnection(node);
			if(nextMergeConn != null && nextMergeConn.getInputId()>1 && startNodeCid != null){
   			%>
				txf_<%=cid%>.join();
				if(txf_<%=cid%>.getLastException()!=null) {
					currentComponent = txf_<%=cid%>.getCurrentComponent();
					throw txf_<%=cid%>.getLastException();
				}
				globalMap.remove("queue_<%=virtualSourceCid%>");
			<%
			}else{
			%>
				String readFinishWithExceptionMarkWithPipeId_<%=cid%> = "<%=cid%>_FINISH_WITH_EXCEPTION"+(queue_<%=cid%>==null?"":queue_<%=cid%>.hashCode());
				if(globalMap.containsKey(readFinishWithExceptionMarkWithPipeId_<%=cid%>)){
					globalMap.put(readFinishWithExceptionMarkWithPipeId_<%=cid%>, null);// syn
					globalMap.remove(readFinishWithExceptionMarkWithPipeId_<%=cid%>);
					return;
				}
				globalMap.remove("queue_<%=cid%>"); 
			<%
			}

			// BulkWrite 
			// Last write if number of rows added is less than bulksize
			if(bulkWrite){
		        %>
		        // if bulkWriteOperationCounter_<%=cid%> == 1 the ulkWriteOperation_<%=cid%> is empty, do not execute.
		        if (bulkWriteOperationCounter_<%=cid%> != 1) {
		            bulkWriteOperation_<%=cid%>.execute();
		        }
		        <%
			}

			if(isLog4jEnabled){
			%>
				log.info("<%=cid%> - Has been <%=dataAction.toLowerCase()+(dataAction.endsWith("E")?"d":"ed")%> " + nb_line_<%=cid%> + " records.");
			<%
			}
			if(!"true".equals(useExistingConn)){
			%>
				if(mongo_<%=cid%> != null ){
					<%
					if(isLog4jEnabled){
					%>
						log.info("<%=cid%> - Closing the connection " + mongo_<%=cid%>.getServerAddressList() + ".");
					<%
					}
					%>
						mongo_<%=cid%>.close();
					<%
					if(isLog4jEnabled){
					%>
						log.info("<%=cid%> - The connection was closed successfully.");
					<%
					}
					%>
				}
				resourceMap.put("finish_<%=cid%>", true); 
			<%
			}
			%>
			globalMap.put(readFinishMarkWithPipeId_<%=cid%>,null);//syn
			globalMap.remove(readFinishMarkWithPipeId_<%=cid%>);
		<%
		}
	}
	%>
	globalMap.put("<%=strJobCid %>_NB_LINE",nb_line_<%=cid %>);
	